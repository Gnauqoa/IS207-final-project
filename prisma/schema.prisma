// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique @default(cuid())

  name  String
  email String @unique

  password Password?
  verified Boolean    @default(false)
  sessions Session[]
  Question Question[]
  Answer   Answer[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id String @id @unique @default(cuid())

  hash String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id String @id @unique @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  expirationDate DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Question {
  id String @id @unique @default(cuid())

  content String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  Answer Answer[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Answer {
  id String @id @unique @default(cuid())

  content String

  question   Question @relation(fields: [questionId], references: [id])
  questionId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Verification {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  /// The type of verification, e.g. "email" or "phone"
  type      String
  /// The thing we're trying to verify, e.g. a user's email or phone number
  target    String
  /// The secret key used to generate the otp
  secret    String
  /// The algorithm used to generate the otp
  algorithm String
  /// The number of digits in the otp
  digits    Int
  /// The number of seconds the otp is valid for
  period    Int
  /// When it's safe to delete this verification
  expiresAt DateTime?

  @@unique([target, type])
}